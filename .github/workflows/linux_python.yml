name: Python Linux CI

on: [push, pull_request]


jobs:
  # Building using the github runner environement directly.
  cmake:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install python3 venv
      run: sudo apt-get install python3-venv
    - name: Check cmake
      run: cmake --version
    - name: Swig install
      run: sudo apt install -y swig
    - name: Check swig
      run: swig -version
    - name: echo Path
      run: echo $GITHUB_PATH
    - name: Update Path
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Configure
      run: cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release -DBUILD_PYTHON=ON -DBUILD_CXX_SAMPLES=OFF -DBUILD_CXX_EXAMPLES=OFF
    - name: Build
      run: cmake --build build --config Release --target all -v
    - name: Test
      run: CTEST_OUTPUT_ON_FAILURE=1 cmake --build build --config Release --target test -v
    - name: Install
      run: cmake --build build --config Release --target install -v -- DESTDIR=install
      
  aaarch64:
    name: "Build and Deploy (aarch64 ${{ matrix.pyver }})"
    strategy:
      matrix:
        pyver: [cp36-cp36m, cp37-cp37m, cp38-cp38, cp39-cp39]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      py: /opt/python/${{ matrix.pyver }}/bin/python
      img: quay.io/pypa/manylinux2014_aarch64
      path: /opt/python/${{ matrix.pyver }}/bin/
      workspc: ${{ github.workspace }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Install dependencies
      run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            ${{ env.img }} \
            bash -exc 'export PYTHON_EXE=python3 && \
            yum install -y epel-release dnf && \
            yum-config-manager --enable epel && \
            #yum install -y python3-devel && \
            #find / -name Python.h && \
            #yum install -y cmake && \
            ${{ env.py }} -m pip install cmake && \
            ${{ env.py }} -m pip install python-dev-tools && \
            cmake --version && \
            yum install -y swig && \
            swig -version && \
            #echo "************************************************************************" && \
            #echo ${{ env.workspc }} && \
            #export PATH=/opt/_internal/cpython-*/include/:$PATH && \
            #which python3 && \
            #echo "/usr/local/bin" >> ${{ github.workspace }} && \
            cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release -DBUILD_PYTHON=ON -DPYTHON_LIBRARY=print\(sysconfig.get_config_var\('LIBDIR'\)+'/libpython3.7.dylib'\) -DBUILD_CXX_SAMPLES=OFF -DBUILD_CXX_EXAMPLES=OFF && \
            cmake --build build --config Release --target all -v && \
            CTEST_OUTPUT_ON_FAILURE=1 cmake --build build --config Release --target test -v && \
            cmake --build build --config Release --target install -v -- DESTDIR=install'
            #deactivate'
